# Netlify CMS Settings
## Comment out when doing local development
# backend:
#   name: github
#   repo: 18f/identity-site
#   branch: main # Otherwise, defaults to master
#   base_url: https://federalistapp.18f.gov
#   auth_endpoint: external/auth/github
#   preview_context: federalist/build
#   use_graphql: true
# #
#
# Uncomment when doing local development on Netlify CMS
# Run `npx netlify-cms-proxy-server` to start working locally
# In another terminal, start the app with `make build && make run`
# See https://www.netlifycms.org/docs/beta-features/#working-with-a-local-git-repository
#
#
backend:
  name: git-gateway
  branch: ca-LG-4182-help-pages-pass-tests
  proxy_url: http://localhost:8081/api/v1
local_backend: true

media_folder: assets/img
public_folder: '/img/uploads'
publish_mode: editorial_workflow
logo_url: https://federalist.18f.gov/assets/images/federalist-logo.png

i18n:
  structure: multiple_folders

  # Required - a list of locales to show in the editor UI
  locales: [_en, _es, _fr]

  # Optional, defaults to the first item in locales.
  # The locale to be used for fields validation and as a baseline for the entry.
  default_locale: _en

editor:
  preview: false

collections:
  - label: Help articles
    label_singular: 'Help article'
    name: help
    folder: content/
    i18n: true
    create: true
    summary: '{{category}} > {{title}} ({{filename}}.{{extension}})'
    path: 'help/{{category}}/{{slug}}'
    filter: { field: 'layout', value: 'help' }
    view_groups:
      - label: Help Topic
        field: category
    fields:
      - { label: 'Layout', name: 'layout', widget: 'hidden', default: 'help' }
      - { label: 'Title', name: 'title', widget: 'string', tagname: 'h1', i18n: true }
      - {
          label: 'Category',
          name: category,
          widget: 'select',
          options:
            [
              { label: 'Get started with login.gov', value: 'get-started' },
              { label: 'Manage your account', value: 'manage-your-account' },
              { label: 'Trouble signing in?', value: 'trouble-signing-in' },
              { label: 'Verify your identity', value: 'verify-your-identity' },
              { label: 'Help with specific agencies', value: 'specific-agencies' },
            ],
          default: 'get-started',
          i18n: duplicate,
        }
      - { label: 'Body', name: 'body', widget: 'markdown', i18n: true }
      - { label: 'Meta Title', name: 'meta_title', widget: 'string', required: false, i18n: true }
      - { label: 'Order', name: 'order', widget: 'number', default: 10, min: 0, i18n: duplicate }
      - {
          label: 'Redirect from',
          name: 'redirect_from',
          widget: 'list',
          hint: 'Comma-separated list of urls.',
          required: false,
          i18n: true,
        }
      - {
          label: 'Redirect to',
          name: 'redirect_to',
          widget: 'string',
          required: false,
          i18n: duplicate,
        }
  - label: Landing pages
    label_singular: 'Landing page'
    name: page
    folder: content/
    i18n: true
    create: true
    path: 'landing/{{slug}}'
    filter: { field: 'layout', value: 'main' }
    fields:
      - { label: 'Layout', name: 'layout', widget: 'hidden', default: 'main' }
      - { label: 'Title', name: 'title', widget: 'string', tagname: 'h1', i18n: true }
      - { label: 'Body', name: 'body', widget: 'markdown', i18n: true }
  - label: Policy pages
    label_singular: 'Policy page'
    name: policy
    folder: content/
    i18n: true
    create: true
    path: 'policy/{{slug}}'
    summary: '{{title}} ({{filename}}.{{extension}})'
    filter: { field: 'layout', value: 'sidenav' }
    fields:
      - { label: 'Layout', name: 'layout', widget: 'hidden', default: 'sidenav' }
      - {
          label: 'Page type',
          name: 'sidenav',
          widget: 'hidden',
          default: 'policies',
          i18n: duplicate,
        }
      - { label: 'Title', name: 'title', widget: 'string', tagname: 'h1', i18n: true }
      - { label: 'Description', name: 'description', widget: 'string', i18n: true }
      - { label: 'Body', name: 'body', widget: 'markdown', i18n: true }
      - { label: 'Permalink', name: 'permalink', widget: 'string', i18n: true }
      - { label: 'Order', name: 'index', widget: 'number', i18n: duplicate }
      - { label: 'Redirect from', name: 'redirect_from', widget: list, required: false }
      - {
          label: 'Redirect to',
          name: 'redirect_to',
          widget: 'string',
          required: false,
          i18n: duplicate,
        }
